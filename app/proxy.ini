## proxy port
#zk跟节点

[bootstrap]

zk.enabled = false
zk.urls = 127.0.0.1:2181
zk.timeout = 10s
zk.root = /zebra/bootstrap
#consul跟节点
consul.enabled = false
consul.address = 127.0.0.1:8500
# consul key路径开始不含"/"
consul.root = zebra/bootstrap
##默认为properties配置，即为本文件的配置；如果配置了bootstrap.zk.enabled和bootstrap.consul.enabled值为true时，则zookeeper和consul配置也会起效，并且具有优先获取权，如果找不到再从properties中找。
##优先级的顺序为consul> zookeeper > properties

[server]
log.debug = false
port = 19091
admin.port = 60001
#client,ReverseProxy:
# client: 通过自定义http client请求转发
# ReverseProxy： 通过httputil.NewSingleHostReverseProxy请求转发
mode = client
favicon.ico.path = favicon.ico
#是否启用golang:MemStats + System stats
#gms:  g= golang M=MemStats s=System和stats
gms.enabled = true
gms.domain =
gms.port = 17980
gms.debug = true

## hystrix
[hystrix]
circuit.enabled = false
default.Timeout = 6000
default.MaxConcurrentRequests = 100
default.RequestVolumeThreshold = 20
default.SleepWindow = 5000
default.ErrorPercentThreshold = 50

##http server config
[http]
server.ReadTimeout = 10000
server.WriteTimeout = 10000
## http config
client.connect.timeout = 3000
client.readTimeout = 10000

#----------lb config----------------------------------------------------------#
[lb]
#WeightRobinRound,random,round,hash,fibonacci, default：WeightRobinRound
default.balancer.name = WeightRobinRound
#WeightRobinRound
#fibonacci负载均衡算法的基础响应，比如100，表示平均响应时间在100ms以内，权重值为996~1000;
# 如果大于100，则开始减少权重值
#建议是10的倍数，
default.fibonacci.base = 10
# 默认时间窗口内发生的服务器通信不成功的次数，超过该次数服务
default.max.fails = 3
# 失败时间窗口，与服务器通信的不成功尝试的指定次数的时间窗口;404不作为超时时间
default.fail.time.window = 10s
# 失败时间窗口模式：fixed（固定倍数）和（seq）序列，值配置为fixed，fail.sleep.x的值应该是1个值
default.fail.sleep.mode = fixed
#Sleep窗口倍数，根据fail.sleep.mode配置，可配置序列和固定,失败后在`fail.time.window`时间窗口内视为服务实例不可用
default.fail.sleep.x = 1
;default.fail.sleep.x = 1,1,2,3,5,8,13,21
;失败Sleep窗口最大时间，-1 或者 小于`default.fail.time.window`不对其起效；如果失败Sleep窗口时间大于该值，则后面失败时间窗口模式被设定为fixed，后续的`fail.sleep.x`倍数序列不在起效。
default.fail.sleep.max = 60s
#lb config
log.selected.enabled = true
log.selected.all = false
#---------route config--------------------------------------------------------#
#全局routes配置
[routes]
strip.prefix = false

[traffic.cond]
enabled = true
type = remoteAddr
# 当 类型为composite时，需要配置cond.composites
composites = header,cookie,urlParams



[ini]
#ini 文件的静态路由规则配置
routes.enabled = false
discovery.enbaled = false
discovery.dir = services
#routes.dir=/Users/tietang/my/gitcode/r_app/src/github.com/tietang/zebra/example/routes

[eureka]
# eureka 服务发现：动态路由和负载均衡
server.enabled = true
## 多个集群用逗号分隔
;server.cluster = cluster1,cluster2
;server.urls=http://eureka.didispace.com/eureka
;server.urls = http://127.0.0.1:8761/eureka
server.urls = http://172.16.1.248:8761/eureka
discovery.interval = 60s
service.list=


[consul]
enabled = false
address = 172.16.1.248:8500
;address = 127.0.0.1:8500
# routes
routes.enabled = true
routes.root = zebra/routes
## consul 服务发现：动态路由和负载均衡
discovery.enabled = true
#discovery.address=127.0.0.1:8500
discovery.address = ${consul.address}
discovery.interval = 10s

## router



[zk]
## zookeeper 静态路由规则配置
enabled = false
##zk连接字符串，多个逗号分隔:192.168.1.2:2181,192.168.1.3:2181,192.168.1.4:2181
conn.urls = 127.0.0.1:2181
;conn.urls = 172.16.1.248:2181
timeout = 3s
#zk跟节点
root = /zebra

#多个逗号分割
routes.contexts = routes
#notify-node,all
routes.watch.type = all

#暂不支持
discovery.enbaled = false
discovery.path = /services/
# zookeeper动态路由和负载均衡。基于curator服务发现，http://curator.apache.org/curator-x-discovery/index.html

[sql]
#sql 数据配置路由规则和实例注册
routes.enabled = false
driverName = mysql
url = root:kry02Local@?DB@tcp(172.16.1.248:3306)/po?charset=utf8
;url = root:kry02Local@?DB@tcp(127.0.0.1:3306)/po?charset=utf8

discovery.enabled = false
discovery.interval = 10s
#sql.url=root:root@tcp(127.0.0.1:3306)/route?charset=utf8

[k8s]
# Kubernetes服务发现支持
enabled = false
;urls = https://101.37.107.39:6443
urls = https://172.16.39.193:6443
;urls = http://127.0.0.1:8080
discovery.interval = 10s

#----------------metrics export---------------------
[metrics]
## metrics export
export.influx.enabled = false
export.influx.interval = 10s
export.influx.url = http://127.0.0.1:8086
export.influx.database = metrics
export.influx.username =
export.influx.password =


